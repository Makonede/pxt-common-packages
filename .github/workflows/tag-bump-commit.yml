name: Tag version on merged bump commit

on:
  workflow_call:
    outputs:
      did_tag:
        description: 'Whether a tag was created'
        value: ${{ jobs.return.outputs.did_tag }}

jobs:
  check-merge:
    uses: ./.github/workflows/check-if-merged-pr.yml

  tag-version:
    needs: check-merge
    if: fromJSON(needs.check-merge.outputs.is_merged_pr || 'false') == true
    runs-on: ubuntu-latest
    outputs:
      did_tag: ${{ steps.tag-op.outputs.did_tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Tag commit if it's a version bump
        id: tag-op
        shell: bash
        run: |
          set -euxo pipefail

          echo "==> Fetching tags"
          git fetch --tags

          COMMIT_SHA="${{ github.sha }}"
          echo "==> Current commit SHA: $COMMIT_SHA"

          COMMIT_MSG=$(git log -1 --pretty=%s "$COMMIT_SHA")
          echo "==> Commit message: '$COMMIT_MSG'"

          TAGGED=false

          # Check if commit matches bump pattern
          if [[ "$COMMIT_MSG" =~ \[pxt-cli\]\ bump\ version\ to\ v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION="v${BASH_REMATCH[1]}"
            echo "==> Detected bump version: $VERSION"

            # Check if tag already exists
            if git rev-parse "$VERSION" >/dev/null 2>&1; then
              echo "::warning::Tag $VERSION already exists — skipping tagging."
            else
              echo "==> Tagging commit $COMMIT_SHA with tag $VERSION"
              git tag "$VERSION" "$COMMIT_SHA"

              echo "==> Pushing tag $VERSION to origin"
              git push origin "$VERSION"

              TAGGED=true
            fi
          else
            echo "==> No bump commit detected — skipping tag creation."
          fi

          echo "==> Final tagging result: TAGGED=$TAGGED"
          echo "did_tag=$TAGGED" >> "$GITHUB_OUTPUT"

  not-tag-version:
    needs: check-merge
    if: fromJSON(needs.check-merge.outputs.is_merged_pr || 'false') == false
    runs-on: ubuntu-latest
    outputs:
      did_tag: false
    steps:
      - run: echo "No tag because not a PR merge."

  return:
    runs-on: ubuntu-latest
    needs: [tag-version, not-tag-version]
    if: always()
    outputs:
      did_tag: ${{ needs.tag-version.outputs.did_tag || false }}
    steps:
      - run: echo "Returning did_tag = ${{ needs.tag-version.outputs.did_tag || false }}"
